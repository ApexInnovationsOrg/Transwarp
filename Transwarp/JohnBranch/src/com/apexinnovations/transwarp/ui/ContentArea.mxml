<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" 
		 xmlns:ui="com.apexinnovations.transwarp.ui.*"
		 creationComplete="creationCompleteHandler(event)" xmlns:landingpage="com.apexinnovations.transwarp.ui.landingpage.*">
	
	<fx:Metadata>
		[Event(name="error", type="flash.events.ErrorEvent")]
	</fx:Metadata>
	
	<fx:Script>
		<![CDATA[
			import com.apexinnovations.transwarp.data.Courseware;
			import com.apexinnovations.transwarp.data.CoursewareObject;
			import com.apexinnovations.transwarp.data.Folder;
			import com.apexinnovations.transwarp.data.Page;
			import com.apexinnovations.transwarp.events.ContentAreaSizeEvent;
			import com.apexinnovations.transwarp.events.PageSelectionEvent;
			import com.apexinnovations.transwarp.utils.TranswarpVersion;
			import com.greensock.loading.LoaderStatus;
			
			import mx.events.FlexEvent;
			import mx.utils.ColorUtil;
			
			TranswarpVersion.revision = "$Rev$";
			
			[Bindable]
			protected var timelineVisible:Boolean = false;			
			
			protected function loadProgress(event:ProgressEvent):void {
				progressBar.indeterminate = false;
				progressBar.setProgress(event.bytesLoaded, event.bytesTotal);
			}

			protected function creationCompleteHandler(event:FlexEvent):void {
				Courseware.instance.addEventListener(PageSelectionEvent.PAGE_SELECTION_CHANGED, pageChanged);
				parentApplication.addEventListener(ContentAreaSizeEvent.CONTENT_AREA_SIZE_CHANGED, contentAreaSizeHandler);
				pageChanged();
			}
			
			protected function pageChanged(event:PageSelectionEvent = null):void {
				SoundMixer.stopAll();
				
				var target:CoursewareObject
				if(!event)
					target = Courseware.instance.currentPage;
				else
					target = event.page;
				
				var page:Page = target as Page;
				timelineVisible = false; //hide timeline until content ready
				instructions.visible = instructions.includeInLayout = page ? Boolean(page.instructions) : false;
				instrText.textFlow = page ? page.instructions : null;
				debugInfo.text = target ? target.id + (page ? " (" + page.swf + ")" : "") : "";
				if(!page)
					progressPanel.visible = false;
				//trace("page changed");
				
				landingPage.folder = target as Folder;
				container.page = target as Page;
				
			}
			
			protected function contentReady():void {
				progressPanel.visible = false;
				var page:Page = Courseware.instance.currentPage as Page;
				timelineVisible = page && page.timeline;
				//trace("ready", timelineVisible);
			}
			
			
			protected function contentAreaSizeHandler(event:ContentAreaSizeEvent):void {
				var over:Number = Math.max(0, Math.min(40, Math.max(event.vOverflow, event.hOverflow)));
				var gaps:Number = 10 - over * 8/40;
				var titleHeight:Number = pageTitle.height - over * 5/40;

				topGroup.top = topGroup.bottom = topGroup.gap = gaps;
				pageTitle.scaleX = pageTitle.scaleY = (titleHeight / pageTitle.height);
			}
			
		]]>
	</fx:Script>
	
	<s:Rect height="100%" width="100%" blendMode="multiply">
		<s:fill>
			<s:LinearGradient>
				<s:GradientEntry color="0xdddddd" alpha="1" ratio="0" />
				<s:GradientEntry color="0xffffff" alpha="1" ratio=".5"/>
				<s:GradientEntry color="0xdddddd" alpha="1" ratio="1"/>
			</s:LinearGradient>
		</s:fill>
	</s:Rect>
	<s:Rect height="100%" width="100%" blendMode="multiply">
		<s:fill>
			<s:LinearGradient rotation="90">
				<s:GradientEntry color="0xffffff" alpha="1" ratio=".1" />
				<s:GradientEntry color="0xdddddd" alpha="1" ratio=".5"/>
				<s:GradientEntry color="0xffffff" alpha="1" ratio=".9"/>
			</s:LinearGradient>
		</s:fill>
	</s:Rect>
	<s:VGroup id="topGroup" top="0" bottom="0" width="{width}" height="100%" gap="5" horizontalAlign="center">
		
		<ui:PageTitle id="pageTitle" fontSize="20" horizontalCenter="0" paddingTop="2" paddingBottom="1" />
		
		<s:Group id="contentGroup" width="100%" height="100%">
			<ui:PageContentContainer id="container" width="100%" height="100%" 
								  open="progressPanel.visible = true" complete="contentReady()"
								  progress="loadProgress(event)" indeterminentLoad="progressBar.indeterminate = true"/>
			<landingpage:LandingPage id="landingPage" width="100%" height="100%"/>			
		</s:Group>
		
		<s:VGroup id="bottomGroup" horizontalAlign="center" width="100%">
			<ui:Timeline id="timeline" source="{container.rawContent as TranswarpMovieClip}"
						 visible="{timelineVisible}" height="{timelineVisible ? 20 : 0}"/>
			
			<s:HGroup id="instructions" 
					  paddingLeft="10" paddingRight="10"
					  scaleX="{Math.min(1, width / instructions.width)}"
					  scaleY="{Math.min(1, width / instructions.width)}"
					  verticalAlign="middle">
				
				<s:Rect height="{instrText.height}" top="-1" width="8">
					<s:fill><s:SolidColor color="0x990000"/></s:fill>
				</s:Rect>
				
				<s:RichEditableText id="instrText" color="0x990000" fontWeight="bold" fontSize="15" paddingTop="1" paddingBottom="1" editable="false" selectable="false" />
			</s:HGroup>
		</s:VGroup>
	
		<s:Group width="100%" visible="{Courseware.instance.debug}" includeInLayout="{Courseware.instance.debug}">
			<s:Label id="debugInfo" right="5" color="0xaaaaaa" />
		</s:Group>
		
	</s:VGroup>	
	
	<s:Panel id="progressPanel" title="Loading..." width="30%" height="78" horizontalCenter="0" verticalCenter="0" visible="false" backgroundColor="0xFFFFFF" skinClass="com.apexinnovations.transwarp.skins.PanelSkin">
		<mx:ProgressBar id="progressBar" labelPlacement="bottom" label="%3%%" direction="right" mode="manual" top="10" bottom="10" left="10" right="10"/>
	</s:Panel>
</s:Group>
