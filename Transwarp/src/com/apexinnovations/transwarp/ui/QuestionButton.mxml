<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 buttonMode="true" useHandCursor="true" mouseChildren="false"
		 rollOver="rollOverOut(event)" rollOut="rollOverOut(event)" mouseDown="mouseDownUp(event)" addedToStage="onAdded(event)" click="click(event)">
	<fx:Script>
		<![CDATA[
			import com.apexinnovations.transwarp.data.Question;
			import com.apexinnovations.transwarp.utils.TranswarpVersion;
			
			TranswarpVersion.revision = "$Rev$";
			
			protected var _question:Question = null;
			protected var _selected:Boolean;
			
			[Bindable]
			protected var down:Boolean;			
			
			
			override protected function createChildren():void {
				super.createChildren();
			}
			
			[Bindable] public function get question():Question { return _question; }
			public function set question(q:Question):void { _question = q; }
			
			public function get selected():Boolean { return _selected; }
			public function set selected(value:Boolean):void {
				_selected = value;
				currentState = _selected ? "selected" : "default";
			}
			
			protected function rollOverOut(event:MouseEvent):void {
				if(currentState != "selected")
					currentState = event.type == MouseEvent.ROLL_OVER ? "hovered" : "default";
			}
			
			protected function mouseDownUp(event:MouseEvent):void {
				down = event.type == MouseEvent.MOUSE_DOWN;
			}
			
			protected function onAdded(event:Event):void {
				stage.addEventListener(MouseEvent.MOUSE_UP, mouseDownUp);
			}
			
			protected function click(event:MouseEvent):void {
				selected = !selected;
			}
			
		]]>
	</fx:Script>
	
	<s:states>
		<s:State name="default" />
		<s:State name="hovered" />
		<s:State name="selected" />
	</s:states>
	
	<s:Group width="345" >		
		<s:Rect width="100%" height="100%" radiusX="7">
			<s:stroke>
				<s:SolidColorStroke color="0xffffff" color.selected="0xbbbbbb" color.hovered="0x0000FF" weight="0" weight.hovered="1"/>
			</s:stroke>
			<s:fill>
				<s:SolidColor color="0xdddddd" color.selected="0xdddddd" color.hovered="0xe8e8e8"/>
			</s:fill>
		</s:Rect>
		<s:VGroup>
			<s:HGroup gap="8" verticalAlign="top" paddingTop="7" paddingBottom="7" paddingLeft="7" paddingRight="7" >
				<s:Label text="Q." fontWeight="bold" color="0x0000FF" />
				<s:RichEditableText width="316" height="100%" editable="false" textFlow="{question.qTextFlow}" selectable="false" alpha="0.7" alpha.selected="1" alpha.hovered="1" >
					
				</s:RichEditableText>
			</s:HGroup>		
			<s:HGroup gap="8" verticalAlign="top" paddingTop="7" paddingBottom="7" paddingLeft="7" paddingRight="7" visible="false" visible.selected="true" >
				<s:Label text="A. " fontWeight="bold" color="0xFF0000" visible="false" visible.selected="true" />
				<s:RichEditableText width="316" height="100%" editable="false" textFlow="{question.aTextFlow}" selectable="false" alpha="0.7" alpha.selected="1" alpha.hovered="1" visible="false" visible.selected="true" >
					
				</s:RichEditableText>
			</s:HGroup>		
		</s:VGroup>
	</s:Group>
	
</s:Group>
