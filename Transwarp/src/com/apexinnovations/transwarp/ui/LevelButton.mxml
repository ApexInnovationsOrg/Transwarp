<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 width="237" height="25" buttonMode="true" useHandCursor="true" mouseChildren="false"
		 rollOver="rollOverOut(event)" rollOut="rollOverOut(event)" mouseDown="mouseDownUp(event)" addedToStage="onAdded(event)" click="click(event)">

	<fx:Script>
		<![CDATA[
			import com.apexinnovations.transwarp.data.Course;
			import com.apexinnovations.transwarp.data.Courseware;
			import com.apexinnovations.transwarp.utils.Utils;
			
			import mx.binding.utils.BindingUtils;
			import mx.utils.ColorUtil;
			
			Utils.revision = "$Rev$";
			
			[Bindable] protected var levelRoman:String;
			[Bindable] protected var levelName:String;
			
			[Bindable] protected var _course:Course;
			
			protected var _selected:Boolean;
			
			[Bindable]
			protected var down:Boolean;			
			
			
			override protected function createChildren():void {
				super.createChildren();
				BindingUtils.bindSetter(currentCourseChange, Courseware.instance, "currentCourse");
			}
			
			protected function currentCourseChange(value:Course):void {
				selected = _course == value;
			}
			
			public function get selected():Boolean { return _selected; }
			public function set selected(value:Boolean):void {
				_selected = value;
				currentState = _selected ? "selected" : "default";
			}

			protected function rollOverOut(event:MouseEvent):void {
				if(currentState != "selected")
					currentState = event.type == MouseEvent.ROLL_OVER ? "hovered" : "default";
			}

			protected function mouseDownUp(event:MouseEvent):void {
				down = event.type == MouseEvent.MOUSE_DOWN;
			}

			protected function onAdded(event:Event):void {
				stage.addEventListener(MouseEvent.MOUSE_UP, mouseDownUp);
			}

			public function get course():Course { return _course; }
			public function set course(value:Course):void { 
				_course = value; 
				selected = _course == Courseware.instance.currentCourse;
				if(_course) {
					levelRoman = _course.levelRoman;
					levelName = _course.name;
					
				}
			}
			
			protected function click(event:MouseEvent):void {
				if(_course)
					Courseware.instance.currentCourse = _course;
			}

		]]>
	</fx:Script>
	
	<s:states>
		<s:State name="default" />
		<s:State name="hovered" />
		<s:State name="selected" />
	</s:states>
	
	<s:filters>
		<s:DropShadowFilter blurX="2" blurY="2" angle="45" distance="2" alpha=".5" color="0" />
		<s:DropShadowFilter blurX="6" blurY="6" angle="225" inner="true" alpha=".25" />
	</s:filters>
	
	<s:Group width="237" height="25" x="{down ? 2 : 0}" y="{down? 2 : 0}">
		<s:Rect width="100%" height="100%" radiusX="7">
			<s:fill>
				<s:SolidColor color="0xdddddd" color.selected="0xffffff" color.hovered="0xe8e8e8"/>
			</s:fill>
		</s:Rect>
		
		<s:Rect width="42" height="100%" topLeftRadiusX="7" bottomLeftRadiusX="7">
			<s:fill>
				<s:LinearGradient rotation="270">
					<s:GradientEntry color="{ColorUtil.adjustBrightness2(Courseware.instance.color, -50)}" />
					<s:GradientEntry color="{Courseware.instance.color}" />
				</s:LinearGradient>
			</s:fill>
		</s:Rect>
		
		<s:Label text="{levelRoman}" fontFamily="Arial" color="0xffffff" fontWeight="bold" fontSize="17" left="10" verticalCenter="0" />
		<s:Label text="{levelName}" fontFamily="Arial" fontSize="12" color="0" color.selected="{Courseware.instance.color}" left="50" verticalCenter="0"/>	
	</s:Group>		
	
</s:Group>
