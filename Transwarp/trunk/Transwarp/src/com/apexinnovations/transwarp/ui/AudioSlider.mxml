<?xml version="1.0" encoding="utf-8"?>
<s:HGroup xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark" 
		  xmlns:mx="library://ns.adobe.com/flex/mx"
		  visible.closed="false" verticalAlign="middle"
		  mouseOver="mouseOver(event);" mouseOut="mouseOut(event);">

	<fx:Script>
		<![CDATA[
			import com.apexinnovations.transwarp.data.Courseware;
			import com.apexinnovations.transwarp.utils.TranswarpVersion;
			import com.apexinnovations.transwarp.webservices.ConfigService;
			
			import mx.managers.PopUpManager;

			TranswarpVersion.revision = "$Rev$";

			public var anchor:DisplayObject = null;

			public function display():void {
				visible = true;

				var location:Point = new Point(anchor.x, anchor.y);
				location = anchor.localToGlobal(location);
				y = location.y - height/2;
				
				PopUpManager.bringToFront(this);
				setFocus();
			}
			
			protected function changeVolume():void {
				Courseware.instance.volume = slider.value;
				
				var config:ConfigService = new ConfigService();
				
				config.dispatch("audioVolume", slider.value.toString());
			}
			
			protected function mouseOut(event:MouseEvent):void {
				currentState = 'closed';
			}
			
			protected function mouseOver(event:MouseEvent):void {
				currentState = 'default';
			}
		]]>
	</fx:Script>
	
	<s:states>
		<s:State name="default" />
		<s:State name="closed" />
	</s:states>

	<s:transitions>
		<s:Transition fromState="default" toState="closed">
			<s:Sequence >
				<s:Fade target="{this}" duration="1000" />
			</s:Sequence>
		</s:Transition>
	</s:transitions>

	<s:Rect alpha="0" width="32" height="{height}" /> <!-- This is there so mouse starts over the control so we don't have to worry about initial mouseOut() -->
	<mx:ApplicationControlBar id="control" dock="false" fillAlphas="[0.9, 0.9]" fillColors="[0xffffff, 0xcccccc]" paddingBottom="15" paddingLeft="15" paddingRight="15" paddingTop="17">
		<s:Label text="volume:" fontWeight="bold" color="0x000000" />
		<s:HSlider id="slider" minimum="0" maximum="100" value="{Courseware.instance.volume}" snapInterval="1" liveDragging="false" change="changeVolume();" width="150"/>
	</mx:ApplicationControlBar>
</s:HGroup>
